name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string

permissions:
  contents: write
  packages: write

jobs:
  validate-version:
    name: Validate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Validate version format
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Invalid version format: $VERSION"
          exit 1
        fi

  test-and-build:
    name: Test and Build
    needs: validate-version
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run linter
      run: npm run lint
    
    - name: Check for sensitive files
      run: npm run check-sensitive
    
    - name: Build package
      run: npm pack
    
    - name: Upload package artifact
      uses: actions/upload-artifact@v3
      with:
        name: npm-package
        path: '*.tgz'

  publish-npm:
    name: Publish to NPM
    needs: [validate-version, test-and-build]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Update package version
      run: |
        VERSION="${{ needs.validate-version.outputs.version }}"
        npm version "$VERSION" --no-git-tag-version
    
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.validate-version.outputs.version }}
        name: Release v${{ needs.validate-version.outputs.version }}
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## ðŸš€ Claude Sub-Agents Manager v${{ needs.validate-version.outputs.version }}
          
          ### Installation
          ```bash
          npm install -g @zamaz/claude-agents@${{ needs.validate-version.outputs.version }}
          ```
          
          ### Changelog
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ---
          *Published to [npm](https://www.npmjs.com/package/@zamaz/claude-agents)*